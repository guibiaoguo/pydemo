[
    {
        "bookSourceGroup":"a5、CSS; a4、AllInOne",
        "bookSourceName":"九桃小说网",
        "bookSourceType":"",
        "bookSourceUrl":"https://www.9txs.com",
        "enable":true,
        "httpUserAgent":"",
        "loginUrl":"",
        "ruleBookAuthor":"@css:[property=og:novel:author]@content",
        "ruleBookContent":"@css:#content@html",
        "ruleBookKind":"",
        "ruleBookLastChapter":"@css:[property=og:novel:latest_chapter_name]@content",
        "ruleBookName":"@css:[property=og:novel:book_name]@content",
        "ruleBookUrlPattern":"",
        "ruleChapterList":"+@css:.read>dl:nth-of-type(n+2) a",
        "ruleChapterName":"🍈",
        "ruleChapterUrl":"@css:.more@href",
        "ruleChapterUrlNext":"",
        "ruleContentUrl":"href",
        "ruleContentUrlNext":"",
        "ruleCoverUrl":"@css:[property=og:image]@content",
        "ruleFindUrl":"玄幻奇幻 • 全部::/library/0_1_0_searchPage.html\n玄幻奇幻 • 连载::/library/0_1_1_searchPage.html\n玄幻奇幻 • 完结::/library/0_1_2_searchPage.html\n武侠修真 • 全部::/library/0_2_0_searchPage.html\n武侠修真 • 连载::/library/0_2_1_searchPage.html\n武侠修真 • 完结::/library/0_2_2_searchPage.html\n都市生活 • 全部::/library/0_3_0_searchPage.html\n都市生活 • 连载::/library/0_3_1_searchPage.html\n都市生活 • 完结::/library/0_3_2_searchPage.html\n历史军事 • 全部::/library/0_4_0_searchPage.html\n历史军事 • 连载::/library/0_4_1_searchPage.html\n历史军事 • 完结::/library/0_4_2_searchPage.html\n游戏竞技 • 全部::/library/0_5_0_searchPage.html\n游戏竞技 • 连载::/library/0_5_1_searchPage.html\n游戏竞技 • 完结::/library/0_5_2_searchPage.html\n科幻未来 • 全部::/library/0_6_0_searchPage.html\n科幻未来 • 连载::/library/0_6_1_searchPage.html\n科幻未来 • 完结::/library/0_6_2_searchPage.html\n悬疑灵异 • 全部::/library/0_7_0_searchPage.html\n悬疑灵异 • 连载::/library/0_7_1_searchPage.html\n悬疑灵异 • 完结::/library/0_7_2_searchPage.html\n二 次 元 • 全部::/library/0_8_0_searchPage.html\n二 次 元 • 连载::/library/0_8_1_searchPage.html\n二 次 元 • 完结::/library/0_8_2_searchPage.html\n经典短篇 • 全部::/library/0_9_0_searchPage.html\n经典短篇 • 连载::/library/0_9_1_searchPage.html\n经典短篇 • 完结::/library/0_9_2_searchPage.html\n古代言情 • 全部::/library/0_10_0_searchPage.html\n古代言情 • 连载::/library/0_10_1_searchPage.html\n古代言情 • 完结::/library/0_10_2_searchPage.html\n现代言情 • 全部::/library/0_11_0_searchPage.html\n现代言情 • 连载::/library/0_11_1_searchPage.html\n现代言情 • 完结::/library/0_11_2_searchPage.html\n幻想奇缘 • 全部::/library/0_12_0_searchPage.html\n幻想奇缘 • 连载::/library/0_12_1_searchPage.html\n幻想奇缘 • 完结::/library/0_12_2_searchPage.html\n浪漫青春 • 全部::/library/0_13_0_searchPage.html\n浪漫青春 • 连载::/library/0_13_1_searchPage.html\n浪漫青春 • 完结::/library/0_13_2_searchPage.html\n网络情缘 • 全部::/library/0_14_0_searchPage.html\n网络情缘 • 连载::/library/0_14_1_searchPage.html\n网络情缘 • 完结::/library/0_14_2_searchPage.html\n科幻空间 • 全部::/library/0_15_0_searchPage.html\n科幻空间 • 连载::/library/0_15_1_searchPage.html\n科幻空间 • 完结::/library/0_15_2_searchPage.html\n恐怖灵异 • 全部::/library/0_16_0_searchPage.html\n恐怖灵异 • 连载::/library/0_16_1_searchPage.html\n恐怖灵异 • 完结::/library/0_16_2_searchPage.html\nN 次 元 • 全部::/library/0_17_0_searchPage.html\nN 次 元 • 连载::/library/0_17_1_searchPage.html\nN 次 元 • 完结::/library/0_17_2_searchPage.html\n言情美文 • 全部::/library/0_18_0_searchPage.html\n言情美文 • 连载::/library/0_18_1_searchPage.html\n言情美文 • 完结::/library/0_18_2_searchPage.html\n其他类型 • 全部::/library/0_19_0_searchPage.html\n其他类型 • 连载::/library/0_19_1_searchPage.html\n其他类型 • 完结::/library/0_19_2_searchPage.html",
        "ruleIntroduce":"@css:[property=og:description]@content",
        "ruleSearchAuthor":"@css:.author@text",
        "ruleSearchCoverUrl":"@css:img@src",
        "ruleSearchIntroduce":"@css:.intro@html",
        "ruleSearchKind":"@css:p:not([class]),span@text<js>\nString(result).replace(/\\[|\\]|作者.*?\\|/g,'').replace('|',',')</js>",
        "ruleSearchLastChapter":"@css:.chapter@text<js>result.replace('最新章节：','')</js>",
        "ruleSearchList":"@css:.library>li",
        "ruleSearchName":"@css:.bookname@text",
        "ruleSearchNoteUrl":"@css:.bookname@href",
        "ruleSearchUrl":"https://www.9txs.com/\nsearch.html@searchkey=searchKey",
        "serialNumber":0,
        "weight":0
    },
    {
        "bookSourceGroup":"发现",
        "bookSourceName":"起点小说⭐",
        "bookSourceType":"",
        "bookSourceUrl":"https://www.qidian.com#3",
        "enable":true,
        "httpUserAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0",
        "loginUrl":"https://passport.qidian.com",
        "ruleBookAuthor":"$.Data.Author",
        "ruleBookContent":"<js>\nresult = (/\\.google\\.cn/).test(baseUrl)\n  ? decodeURIComponent(baseUrl.replace(/^.+[&?]text=/, ''))\n  : java.getString('class.j_readContent@html');\nresult = String(result).replace(/<img\\s+[^>]+>/ig, '<p>〖插图，App暂不支持〗</p>');\n</js>",
        "ruleBookInfoInit":"",
        "ruleBookKind":"$.Data.CategoryName&&$.Data.BookStatus&&$.Data.WordsCount",
        "ruleBookLastChapter":"$.Data.LastVipUpdateChapterName||$.Data.LastUpdateChapterName",
        "ruleBookName":"$.Data.BookName",
        "ruleBookUrlPattern":"",
        "ruleChapterList":"+<js>\n//二级目录，Json\nvar jdoc = JSON.parse(result).Data;\nvar chUrl = 'https://vipreader.qidian.com/chapter/'+jdoc.BookId+'/';\nvar volUrl = 'https://translate.google.cn/#view=home&op=translate&sl=zh-CN&tl=en&text=';\nvar list = [];\n\nfunction format(title){\n  return title.trim().replace(/^(\\d+)(?![\\s\\d卷部章节回.])/, '$1 ').replace(/\\s+/g, \"\\x20\\x20\");\n}\n\njdoc.Volumes.forEach((vol,idx) => {\n  var chs = jdoc.Chapters.filter(c => c.Vc == vol.VolumeCode).map(ch => ({\n    text: (ch.V === 0 ? '' : '💰').padStart(4, \"\\u2000\") + format(ch.N),\n    href: chUrl + ch.C,\n    name: format(ch.N)\n  }));\n\n  var volInfo = '目录(' + chs.length + \")：\\n\";\n  volInfo += chs.slice(0,10).map(v => v.name).join(\"\\n\");\n  volInfo += chs.length > 10 ? \"\\n……\" : '';\n  list.push({\n    text: '🔻[ ' + format(vol.VolumeName) + ' ]',\n    href: volUrl + encodeURIComponent(volInfo)\n  });\n  list = list.concat(chs);\n});\n\nresult = list;\n</js>",
        "ruleChapterName":"text",
        "ruleChapterUrl":"",
        "ruleChapterUrlNext":"",
        "ruleContentUrl":"href",
        "ruleContentUrlNext":"",
        "ruleCoverUrl":"",
        "ruleFindAuthor":"class.author@class.name@text\n||class.author@tag.a.0@text",
        "ruleFindCoverUrl":"@css:a[data-bid]@data-bid##^##https://bookcover.yuewen.com/qdbimg/349573/",
        "ruleFindIntroduce":"class.intro@text\n@js:(result || '').replace(/^\\s*/, '');",
        "ruleFindKind":"//a[@data-eid=\"qd_B60\"]/text() | //*[@class=\"author\"]/span[-1]/text() | //*[@class=\"update\"]/span[-1]/text()\n@js:(result || '').replace('连载中', '连载').replace('已完成', '完结').replace(/[\\x20]\\d\\d(?::\\d\\d){1,2}/, '');",
        "ruleFindLastChapter":"@css:a[data-cid]@text\n@js:(result || '').replace(/^最新更新\\s*/, '');",
        "ruleFindList":"//*[@class*=\"all-book-list\" or @id=\"rank-view-list\" or @id=\"limit-list\"]//*[@data-rid]",
        "ruleFindName":"@css:a[data-bid][href*=/info/]:not([class$=-btn]):matches(\\S)@text",
        "ruleFindNoteUrl":"@css:a[data-bid]@data-bid##^##https://druid.if.qidian.com/argus/api/v1/chapterlist/chapterlist?bookId=",
        "ruleFindUrl":"男频小说::/all?style=1&page=searchPage\n男频连载::/all?style=1&page=searchPage&action=0\n男频完本::/all?style=1&page=searchPage&action=1\n精品小说::/all?style=1&page=searchPage&sign=2\n总收藏榜::/all?style=1&page=searchPage&orderId=11\n月票榜单::/rank/yuepiao?style=1&page=searchPage\n周推荐榜::/all?style=1&page=searchPage&orderId=9\n月推荐榜::/all?style=1&page=searchPage&orderId=10\n总推荐榜::/all?style=1&page=searchPage&orderId=2\n风云榜单::/rank/fengyun?style=1&page=searchPage\n热销榜单::/rank/hotsales?style=1&page=searchPage\n阅读榜单::/rank/readIndex?style=1&page=searchPage\n推荐榜单::/rank/recom?style=1&page=searchPage\n收藏榜单::/rank/collect?style=1&page=searchPage\n 打赏榜单::/rank/vipreward?style=1&page=searchPage\n\n\n女频小说::/mm/all?style=1&page=searchPage\n女频连载::/mm/all?style=1&page=searchPage&action=0\n女频完本::/mm/all?style=1&page=searchPage&action=1\n精品小说::/mm/all?style=1&page=searchPage&sign=2\n总收藏榜::/mm/all?style=1&page=searchPage&orderId=11\n总字数榜::/mm/all?style=1&page=searchPage&orderId=3\n周推荐榜::/mm/all?style=1&page=searchPage&orderId=9\n月推荐榜::/mm/all?style=1&page=searchPage&orderId=10\n总推荐榜::/mm/all?style=1&page=searchPage&orderId=2\n古代言情::/mm/all?style=1&page=searchPage&chanId=80\n现代言情::/mm/all?style=1&page=searchPage&chanId=82\n浪漫青春::/mm/all?style=1&page=searchPage&chanId=83\n玄幻言情::/mm/all?style=1&page=searchPage&chanId=84\nN の次元::/mm/all?style=1&page=searchPage&chanId=87\n纯爱小说::/mm/all?style=1&page=searchPage&chanId=89",
        "ruleIntroduce":"",
        "ruleSearchAuthor":"class.author@class.name@text",
        "ruleSearchCoverUrl":"class.book-img-box@tag.img.0@src",
        "ruleSearchIntroduce":"class.intro@text",
        "ruleSearchKind":"class.author@tag.a.1@text&&class.author@tag.span.0@text",
        "ruleSearchLastChapter":"class.update@text##最新更新\\s*",
        "ruleSearchList":"id.result-list@tag.li\n<js>\n//过滤搜索结果：删除糢糊搜索结果或只保留书名长度最短的图书。\nvar rules = {\n  pattern: /[?&]kw=([^&|]+)/,\n  name: 'tag.h4.0@tag.a.0@text',\n  author: 'class.author@class.name@text'\n}\nvar opts = {\n  nonfuzzy: true,\n  less: false,\n  charset: 'UTF-8'\n};\n\nfunction searchFilter(rules, opts, schList){\n  //依赖baseUrl、result变量。\n  //return Array\n  //schList List<Object>(result.toArray()): 要过滤的列表\n  //pattern RegExp: 获取searchKey的正则表达式\n  //name String|RegExp: 书名规则\n  //author String|RegExp: 作者规则\n  //charset String('UTF-8'): URL编码方式\n  //nonfuzzy Boolean(true): 删除模糊搜索结果\n  //less Boolean(false): 只保留书名长度最短的图书\n\n  schList = schList === undefined ? result.toArray() : schList;\n  opts.charset = opts.charset === undefined ? 'UTF-8' : opts.charset;\n  opts.nonfuzzy = opts.nonfuzzy === undefined ? true : !!opts.nonfuzzy;\n  opts.less = opts.less === undefined ? false : !!opts.less;\n\n  function getStr(ele, index){\n    var nrIsReg = (rules.name instanceof RegExp);\n    var arIsReg = (rules.author instanceof RegExp); \n    if (!nrIsReg || !arIsReg) { java.setContent(ele); }\n    return {\n      name: nrIsReg ? (String(ele).match(rules.name)||['',''])[1] : String(java.getString(rules.name)),\n     author: arIsReg ? (String(ele).match(rules.author)||['',''])[1] : String(java.getString(rules.author)),\n      index: index\n    };\n  }\n\n  try {\n    var kw = (baseUrl.match(rules.pattern) || ['',''])[1];\n    kw = Packages.java.net.URLDecoder.decode(kw, opts.charset);\n    var books = schList.map((e,i) => getStr(e,i)).filter(v => !opts.nonfuzzy || v.name.includes(kw) || v.author.includes(kw));\n    var list = [];\n    var min = Math.min.apply(null, books.map(v => v.name.length));\n    var length = Math.max(String(kw).length, min);\n    books.forEach(v => {\n      if (!opts.less || v.name.length === length){ list.push(schList[v.index]); }\n    });\n    return list;\n  } catch(e) {\n    return schList;\n  }\n}\n\nsearchFilter(rules, opts);\n</js>",
        "ruleSearchName":"tag.h4.0@tag.a.0@text",
        "ruleSearchNoteUrl":"tag.h4.0@tag.a.0@href##^.+?/(\\d+)$##https://druid.if.qidian.com/argus/api/v1/chapterlist/chapterlist?bookId=$1",
        "ruleSearchUrl":"https://www.qidian.com/search?kw=searchKey&page=searchPage",
        "serialNumber":0,
        "weight":0
    }
]